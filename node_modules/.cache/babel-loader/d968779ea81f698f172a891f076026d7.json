{"ast":null,"code":"var _jsxFileName = \"/home/m/Home/Work/Personal-Projects/food-ordering-app/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-ordering-app-c54ca-default-rtdb.firebaseio.com/meals');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = []; // transform loaded data\n\n      for (let key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"pzdxjHaxPcgzfsxHt2v1NZY454E=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["/home/m/Home/Work/Personal-Projects/food-ordering-app/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","MealsLoading","MealsError","mealsList","map","meal"],"mappings":";;;AACA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAmBC,QAAnB,QAAoC,OAApC;;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBH,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACI,SAAD,EAAWC,YAAX,IAA2BL,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAA2BP,QAAQ,EAAzC;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACf,UAAMS,UAAU,GAAG,YAAY;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mEAAD,CAA5B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACf,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AACD;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AAEA,YAAMC,WAAW,GAAG,EAApB,CAT6B,CASL;;AAExB,WAAK,IAAIC,GAAT,IAAgBH,YAAhB,EAA8B;AAC5BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFT;AAGfC,UAAAA,WAAW,EAAEP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHhB;AAIfC,UAAAA,KAAK,EAACR,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJT,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KArBD;;AAuBEG,IAAAA,UAAU,GAAGc,KAAb,CAAoBC,KAAD,IAAW;AAC5BlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,MAAAA,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;AACD,KAHD;AAIH,GA5BQ,EA4BN,EA5BM,CAAT;;AA8BA,MAAGpB,SAAH,EAAc;AACZ,wBACE;AAAS,MAAA,SAAS,EAAIN,OAAO,CAAC2B,YAA9B;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,MAAGnB,SAAH,EAAc;AACZ,wBACE;AAAS,MAAA,SAAS,EAAIR,OAAO,CAAC4B;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF;AAID;;AAED,QAAMC,SAAS,GAAGzB,KAAK,CAAC0B,GAAN,CAAWC,IAAD,iBAC1B,QAAC,QAAD;AAEE,IAAA,EAAE,EAAIA,IAAI,CAACX,EAFb;AAGE,IAAA,IAAI,EAAEW,IAAI,CAACV,IAHb;AAIE,IAAA,WAAW,EAAEU,IAAI,CAACT,WAJpB;AAKE,IAAA,KAAK,EAAES,IAAI,CAACR;AALd,KACOQ,IAAI,CAACX,EADZ;AAAA;AAAA;AAAA;AAAA,UADgB,CAAlB;AAUA,sBACE;AAAS,IAAA,SAAS,EAAEpB,OAAO,CAACI,KAA5B;AAAA,2BACE,QAAC,IAAD;AAAA,6BACE;AAAA,kBAAKyB;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApED;;GAAM1B,c;;KAAAA,c;AAsEN,eAAeA,cAAf","sourcesContent":["\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect,useState  } from 'react';\n\n\nconst AvailableMeals = () => {\n\n  const [meals,setMeals] = useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n  const [httpError,setHttpError] = useState( );\n\n  useEffect (() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://food-ordering-app-c54ca-default-rtdb.firebaseio.com/meals');\n      \n      if(!response.ok) {\n        throw new Error('Something went wrong');\n      }\n      \n      const responseData = await response.json();\n      \n      const loadedMeals = []; // transform loaded data\n\n      for (let key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price:responseData[key].price\n        })\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false)\n    }\n   \n      fetchMeals().catch((error) => {\n        setIsLoading(false);\n        setHttpError(error.message)\n      });        \n  }, [])\n\n  if(isLoading) {\n    return (\n      <section className = {classes.MealsLoading}>\n        <p>Loading...</p>\n      </section>\n    )\n  }\n  \n  if(httpError) {\n    return (\n      <section className = {classes.MealsError}>\n      </section>\n    )\n  }\n  \n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id = {meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}