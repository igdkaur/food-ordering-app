{"ast":null,"code":"var _jsxFileName = \"/home/m/Home/Work/Personal-Projects/food-ordering-app/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputsValidity, setFormInputsValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredStreet = streetInputRef.current.value;\n    const enteredPostal = postalInputRef.current.value;\n    const enteredCity = cityInputRef.current.value;\n    console.log(\"name\", enteredName);\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredStreetIsValid = !isEmpty(enteredStreet);\n    const enteredPostalIsValid = isFiveChars(enteredPostal);\n    const enteredCityIsValid = !isEmpty(enteredCity);\n    setFormInputsValidity({\n      name: enteredNameIsValid,\n      street: enteredStreetIsValid,\n      city: enteredCityIsValid,\n      postalCode: enteredPostalIsValid\n    });\n    console.log(\"hey\", formInputsValidity);\n    const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n\n    if (!formIsValid) {\n      return;\n    } //submitdata\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} `,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !formInputsValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formInputsValidity.street && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter valid street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !formInputsValidity.postal && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter valid postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formInputsValidity.city && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Please enter valid city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"hZki2HrCkgIqDzwnE22kZfS4v/E=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/home/m/Home/Work/Personal-Projects/food-ordering-app/src/components/Cart/Checkout.js"],"names":["classes","useRef","useState","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputsValidity","setFormInputsValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredStreet","enteredPostal","enteredCity","console","log","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","formIsValid","form","control","postal","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import classes from './Checkout.module.css';\nimport { useRef,useState } from 'react';\n\n\nconst isEmpty = value => value.trim() === '';\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = (props) => {\n\n  const  [formInputsValidity,setFormInputsValidity] = useState({\n    name: true,\n    street:true,\n    city:true,\n    postalCode:true\n  })\n\n  const nameInputRef = useRef();  \n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n  const enteredName = nameInputRef.current.value;  \n  const enteredStreet = streetInputRef.current.value;  \n  const enteredPostal = postalInputRef.current.value;\n  const enteredCity = cityInputRef.current.value;\n  console.log(\"name\",enteredName)\n\n  const enteredNameIsValid = !isEmpty(enteredName);\n  const enteredStreetIsValid = !isEmpty(enteredStreet);\n  const enteredPostalIsValid = isFiveChars(enteredPostal);\n  const enteredCityIsValid = !isEmpty(enteredCity);\n\n  setFormInputsValidity({\n    name:enteredNameIsValid,\n    street:enteredStreetIsValid,\n    city:enteredCityIsValid,\n    postalCode:enteredPostalIsValid\n  })\n  console.log(\"hey\",formInputsValidity)\n\n\n  const formIsValid = enteredNameIsValid && \n  enteredStreetIsValid &&  enteredPostalIsValid && enteredCityIsValid;\n\n  if(!formIsValid) {\n    return;\n  }\n  //submitdata\n\n\n  };\n\n  \n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={`${classes.control} `}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name'ref={nameInputRef} />\n        {!formInputsValidity.name && <p> Please enter valid name</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street'ref={streetInputRef} />\n        {!formInputsValidity.street && <p> Please enter valid street</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalInputRef}/>\n        {!formInputsValidity.postal && <p> Please enter valid postal</p>}\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef}/>\n        {!formInputsValidity.city && <p> Please enter valid city</p>}\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;"]},"metadata":{},"sourceType":"module"}