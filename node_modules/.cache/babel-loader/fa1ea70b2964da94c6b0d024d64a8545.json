{"ast":null,"code":"var _jsxFileName = \"/home/m/Home/Work/Personal-Projects/food-ordering-app/src/components/Cart/Checkout.js\",\n    _s = $RefreshSig$();\n\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim === '';\n\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = props => {\n  _s();\n\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    street: true,\n    city: true,\n    postalCode: true\n  });\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const enteredName = nameInputRef.current.value;\n  const enteredStreet = streetInputRef.current.value;\n  const enteredPostal = postalInputRef.current.value;\n  const enteredCity = cityInputRef.current.value;\n  const enteredNameIsValid = !isEmpty(enteredName);\n  const enteredStreetIsValid = !isEmpty(enteredPostal);\n  const enteredPostalIsValid = isFiveChars(enteredName);\n  const enteredCityIsValid = !isEmpty(enteredCity);\n  setFormInputValidity();\n  const formIsValid = enteredNameIsValid && enteredStreetIsValid && enteredPostalIsValid && enteredCityIsValid;\n\n  const confirmHandler = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        ref: nameInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"street\",\n        ref: streetInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postal\",\n        ref: postalInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        ref: cityInputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"j56SXq2BKAr1Ag5Tkp/d5CzVJT0=\");\n\n_c = Checkout;\nexport default Checkout; // validation - no fields empty,postal not less than 5\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["/home/m/Home/Work/Personal-Projects/food-ordering-app/src/components/Cart/Checkout.js"],"names":["classes","useRef","useState","isEmpty","value","trim","isFiveChars","length","Checkout","props","formInputValidity","setFormInputValidity","name","street","city","postalCode","nameInputRef","streetInputRef","postalInputRef","cityInputRef","enteredName","current","enteredStreet","enteredPostal","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalIsValid","enteredCityIsValid","formIsValid","confirmHandler","event","preventDefault","form","control","actions","onCancel","submit"],"mappings":"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","sourcesContent":["import classes from './Checkout.module.css';\nimport { useRef,useState } from 'react';\n\n\nconst isEmpty = value => value.trim === '';\nconst isFiveChars = value => value.trim().length === 5;\n\nconst Checkout = (props) => {\n\n  const  [formInputValidity,setFormInputValidity] = useState({\n    name: true,\n    street:true,\n    city:true,\n    postalCode:true\n  })\n\n  const nameInputRef = useRef();  \n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n\n  const enteredName = nameInputRef.current.value;  \n  const enteredStreet = streetInputRef.current.value;  \n  const enteredPostal = postalInputRef.current.value;\n  const enteredCity = cityInputRef.current.value;\n\n  const enteredNameIsValid = !isEmpty(enteredName);\n  const enteredStreetIsValid = !isEmpty(enteredPostal);\n  const enteredPostalIsValid = isFiveChars(enteredName);\n  const enteredCityIsValid = !isEmpty(enteredCity);\n\n  setFormInputValidity()\n\n  const formIsValid = enteredNameIsValid && \n  enteredStreetIsValid &&  enteredPostalIsValid && enteredCityIsValid;\n\n\n\n  const confirmHandler = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <form className={classes.form} onSubmit={confirmHandler}>\n      <div className={classes.control}>\n        <label htmlFor='name'>Your Name</label>\n        <input type='text' id='name'ref={nameInputRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='street'>Street</label>\n        <input type='text' id='street'ref={streetInputRef} />\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='postal'>Postal Code</label>\n        <input type='text' id='postal' ref={postalInputRef}/>\n      </div>\n      <div className={classes.control}>\n        <label htmlFor='city'>City</label>\n        <input type='text' id='city' ref={cityInputRef}/>\n      </div>\n      <div className={classes.actions}>\n        <button type='button' onClick={props.onCancel}>\n          Cancel\n        </button>\n        <button className={classes.submit}>Confirm</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Checkout;\n\n// validation - no fields empty,postal not less than 5\n"]},"metadata":{},"sourceType":"module"}