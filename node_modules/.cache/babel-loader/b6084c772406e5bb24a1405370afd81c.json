{"ast":null,"code":"var _jsxFileName = \"/home/m/Home/Work/Personal-Projects/food-ordering-app/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport CartContext from '../../store/cart-context';\nimport React, { useContext, useState } from 'react';\nimport Checkout from './Checkout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIssubmitting] = useState(false);\n  const [isSubmitted, setIssubmitted] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const handleOnRemove = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const handleOnAdd = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const handleOnOrder = () => {\n    setIsCheckout(true);\n  };\n\n  const handleSubmitOrder = async userData => {\n    //data sbmted to server\n    setIssubmitting(true);\n    await fetch('https://food-ordering-app-c54ca-default-rtdb.firebaseio.com/orders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIssubmitting(false);\n    setIssubmitted(true);\n  };\n\n  const cartItems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes[\"cart-items\"],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      amount: item.amount,\n      name: item.name,\n      price: item.price,\n      onRemove: handleOnRemove.bind(null, item.id),\n      onAdd: handleOnAdd.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes['button--alt'],\n      onClick: props.onClose,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: handleOnOrder,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n\n  const cartModalContent = /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartItems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: handleSubmitOrder,\n      onCancel: props.onClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 18\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 28\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"t3zURkar71vjkLbboZ/HLydTjwI=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/m/Home/Work/Personal-Projects/food-ordering-app/src/components/Cart/Cart.js"],"names":["Modal","classes","CartItem","CartContext","React","useContext","useState","Checkout","Cart","props","isCheckout","setIsCheckout","isSubmitting","setIssubmitting","isSubmitted","setIssubmitted","cartCtx","totalAmount","toFixed","hasItems","items","length","handleOnRemove","id","removeItem","handleOnAdd","item","addItem","amount","handleOnOrder","handleSubmitOrder","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartItems","map","name","price","bind","modalActions","actions","onClose","button","cartModalContent","total"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAEtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACM,YAAD,EAAcC,eAAd,IAAiCP,QAAQ,CAAC,KAAD,CAA/C;AACA,QAAM,CAACQ,WAAD,EAAaC,cAAb,IAA+BT,QAAQ,CAAC,KAAD,CAA7C;AAGA,QAAMU,OAAO,GAAGX,UAAU,CAACF,WAAD,CAA1B;AAEA,QAAMc,WAAW,GAAI,IAAGD,OAAO,CAACC,WAAR,CAAoBC,OAApB,CAA4B,CAA5B,CAA+B,EAAvD;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACI,KAAR,CAAcC,MAAd,GAAuB,CAAxC;;AAEA,QAAMC,cAAc,GAAIC,EAAD,IAAQ;AAC7BP,IAAAA,OAAO,CAACQ,UAAR,CAAmBD,EAAnB;AACD,GAFD;;AAIA,QAAME,WAAW,GAAIC,IAAD,IAAU;AAC5BV,IAAAA,OAAO,CAACW,OAAR,CAAgB,EAAC,GAAGD,IAAJ;AAASE,MAAAA,MAAM,EAAC;AAAhB,KAAhB;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM;AAC1BlB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAFD;;AAIA,QAAMmB,iBAAiB,GAAG,MAAOC,QAAP,IAAoB;AAAE;AAC9ClB,IAAAA,eAAe,CAAC,IAAD,CAAf;AACA,UAAMmB,KAAK,CAAC,yEAAD,EAA2E;AACpFC,MAAAA,MAAM,EAAE,MAD4E;AAEpFC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,IAAI,EAACN,QADc;AAEnBO,QAAAA,YAAY,EAAEtB,OAAO,CAACI;AAFH,OAAf;AAF8E,KAA3E,CAAX;AAOAP,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAXD;;AAaA,QAAMwB,SAAS,gBACb;AAAI,IAAA,SAAS,EAAEtC,OAAO,CAAC,YAAD,CAAtB;AAAA,cACGe,OAAO,CAACI,KAAR,CAAcoB,GAAd,CAAmBd,IAAD,iBACjB,QAAC,QAAD;AAEE,MAAA,MAAM,EAAEA,IAAI,CAACE,MAFf;AAGE,MAAA,IAAI,EAAEF,IAAI,CAACe,IAHb;AAIE,MAAA,KAAK,EAAEf,IAAI,CAACgB,KAJd;AAKE,MAAA,QAAQ,EAAIpB,cAAc,CAACqB,IAAf,CAAoB,IAApB,EAA0BjB,IAAI,CAACH,EAA/B,CALd;AAME,MAAA,KAAK,EAAIE,WAAW,CAACkB,IAAZ,CAAiB,IAAjB,EAAuBjB,IAAvB;AANX,OACOA,IAAI,CAACH,EADZ;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAeA,QAAMqB,YAAY,gBAChB;AAAK,IAAA,SAAS,EAAE3C,OAAO,CAAC4C,OAAxB;AAAA,4BACE;AAAQ,MAAA,SAAS,EAAE5C,OAAO,CAAC,aAAD,CAA1B;AAA2C,MAAA,OAAO,EAAEQ,KAAK,CAACqC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIG3B,QAAQ,iBACP;AAAQ,MAAA,SAAS,EAAElB,OAAO,CAAC8C,MAA3B;AAAmC,MAAA,OAAO,EAAElB,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAYA,QAAMmB,gBAAgB,gBAAG,QAAC,KAAD,CAAO,QAAP;AAAA,eACtBT,SADsB,eAEzB;AAAK,MAAA,SAAS,EAAEtC,OAAO,CAACgD,KAAxB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAOhC;AAAP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFyB,EAMxBP,UAAU,iBAAI,QAAC,QAAD;AAAU,MAAA,SAAS,EAAIoB,iBAAvB;AAA0C,MAAA,QAAQ,EAAErB,KAAK,CAACqC;AAA1D;AAAA;AAAA;AAAA;AAAA,YANU,EAOxB,CAACpC,UAAD,IAAekC,YAPS;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzB;;AAUA,sBACE,QAAC,KAAD;AAAO,IAAA,OAAO,EAAInC,KAAK,CAACqC;AAAxB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA/ED;;GAAMtC,I;;KAAAA,I;AAiFN,eAAeA,IAAf","sourcesContent":["import Modal from '../UI/Modal';\nimport classes from './Cart.module.css';\nimport CartItem from './CartItem';\nimport CartContext from '../../store/cart-context';\nimport React, { useContext,useState } from 'react';\nimport Checkout from './Checkout';\n\nconst Cart = (props) => {\n\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting,setIssubmitting] = useState(false);\n  const [isSubmitted,setIssubmitted] = useState(false); \n \n\n  const cartCtx = useContext(CartContext); \n\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const handleOnRemove = (id) => {\n    cartCtx.removeItem(id);\n  }\n\n  const handleOnAdd = (item) => {\n    cartCtx.addItem({...item,amount:1});\n  }\n\n  const handleOnOrder = () => {\n    setIsCheckout(true);\n  }\n\n  const handleSubmitOrder = async (userData) => { //data sbmted to server\n    setIssubmitting(true);\n    await fetch('https://food-ordering-app-c54ca-default-rtdb.firebaseio.com/orders.json',{\n      method: 'POST',\n      body: JSON.stringify({\n        user:userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIssubmitting(false);\n    setIssubmitted(true);\n  }\n\n  const cartItems = (\n    <ul className={classes[\"cart-items\"]}>\n      {cartCtx.items.map((item) => (\n        <CartItem \n          key={item.id}\n          amount={item.amount}\n          name={item.name}\n          price={item.price}\n          onRemove = {handleOnRemove.bind(null, item.id)}\n          onAdd = {handleOnAdd.bind(null, item)}\n        />\n      ))}\n    </ul>\n  );\n\n  const modalActions = (\n    <div className={classes.actions}>\n      <button className={classes['button--alt']} onClick={props.onClose}>\n        Close\n      </button>\n      {hasItems && (\n        <button className={classes.button} onClick={handleOnOrder}>\n          Order\n        </button>\n      )}\n    </div>\n  );\n  const cartModalContent = <React.Fragment>\n    {cartItems}\n  <div className={classes.total}>\n    <span>Total Amount</span>\n    <span>{totalAmount}</span>\n  </div>\n  {isCheckout && <Checkout onConfirm = {handleSubmitOrder} onCancel={props.onClose} />}\n  {!isCheckout && modalActions}\n  </React.Fragment>\n\n  return (\n    <Modal onClose = {props.onClose}>\n\n    </Modal>\n  );\n};\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}