{"ast":null,"code":"var _jsxFileName = \"/home/m/Home/Work/Personal-Projects/food-ordering-app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    let updatedItems;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    console.log(\"hey\", existingCartItem);\n\n    if (existingCartItem) {\n      const updatedItem = { ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  if (action.type === 'REMOVE') {}\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const RemoveItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: RemoveItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/m/Home/Work/Personal-Projects/food-ordering-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","updatedItems","existingCartItemIndex","findIndex","id","existingCartItem","console","log","updatedItem","concat","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","RemoveItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAGA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAG,EADe;AAEvBC,EAAAA,WAAW,EAAG;AAFS,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAA0B;AAExB,UAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAqBJ,MAAM,CAACG,IAAP,CAAYE,MAAhF;AAGA,QAAIC,YAAJ;AAEA,UAAMC,qBAAqB,GAAGR,KAAK,CAACH,KAAN,CAAYY,SAAZ,CAAsBL,IAAI,IAAIA,IAAI,CAACM,EAAL,KAAYT,MAAM,CAACG,IAAP,CAAYM,EAAtD,CAA9B;AAEA,UAAMC,gBAAgB,GAAGX,KAAK,CAACH,KAAN,CAAYW,qBAAZ,CAAzB;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBF,gBAAlB;;AAEA,QAAIA,gBAAJ,EAAsB;AACpB,YAAMG,WAAW,GAAG,EAClB,GAAGH,gBADe;AAElBL,QAAAA,MAAM,EAAEK,gBAAgB,CAACL,MAAjB,GAA0BL,MAAM,CAACG,IAAP,CAAYE;AAF5B,OAApB;AAIAC,MAAAA,YAAY,GAAG,CAAC,GAAGP,KAAK,CAACH,KAAV,CAAf;AACAU,MAAAA,YAAY,CAACC,qBAAD,CAAZ,GAAsCM,WAAtC;AACD,KAPD,MAOO;AACLP,MAAAA,YAAY,GAAGP,KAAK,CAACH,KAAN,CAAYkB,MAAZ,CAAmBd,MAAM,CAACG,IAA1B,CAAf;AACD;;AAGD,WAAO;AACLP,MAAAA,KAAK,EAAGU,YADH;AAELT,MAAAA,WAAW,EAAGK;AAFT,KAAP;AAKD;;AAED,MAAGF,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA6B,CAE5B;;AAEF,SAAON,gBAAP;AACA,CArCD;;AAuCA,MAAMoB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAEhC,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCzB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;AAGE,QAAMwB,oBAAoB,GAAIhB,IAAD,IAAU;AACrCe,IAAAA,kBAAkB,CAAC;AAACjB,MAAAA,IAAI,EAAG,KAAR;AAAeE,MAAAA,IAAI,EAAGA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMiB,yBAAyB,GAAIX,EAAD,IAAQ;AACxCS,IAAAA,kBAAkB,CAAC;AAACjB,MAAAA,IAAI,EAAG,QAAR;AAAkBQ,MAAAA,EAAE,EAAGA;AAAvB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMY,WAAW,GAAG;AAClBzB,IAAAA,KAAK,EAAEqB,SAAS,CAACrB,KADC;AAElBC,IAAAA,WAAW,EAAEoB,SAAS,CAACpB,WAFL;AAGlByB,IAAAA,OAAO,EAAEH,oBAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAKC,WAAhC;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMT,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf","sourcesContent":["import React, {useReducer} from 'react'\nimport CartContext from './cart-context'\n\n\nconst defaultCartState = {\n  items : [],\n  totalAmount : 0\n}\n\nconst cartReducer = (state, action) => {\n  if(action.type === 'ADD') {\n\n    const updatedTotalAmount = state.totalAmount + action.item.price *  action.item.amount;\n\n\n    let updatedItems;\n\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n   \n    const existingCartItem = state.items[existingCartItemIndex];\n    console.log(\"hey\",existingCartItem)\n    \n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount\n      }\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n   \n    return {\n      items : updatedItems,\n      totalAmount : updatedTotalAmount\n    }\n\n  }\n\n  if(action.type === 'REMOVE') {\n\n  }\n\n return defaultCartState;\n}\n\nconst CartProvider = (props) => {\n\nconst [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type : 'ADD', item : item});\n  }\n\n  const RemoveItemFromCartHandler = (id) => {\n    dispatchCartAction({type : 'REMOVE', id : id})\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: RemoveItemFromCartHandler\n  }\n\n  return (\n    <CartContext.Provider value  = {cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}