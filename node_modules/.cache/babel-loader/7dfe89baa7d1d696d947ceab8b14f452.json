{"ast":null,"code":"import _slicedToArray from\"/home/m/Home/Work/Personal-Projects/food-ordering-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/home/m/Home/Work/Personal-Projects/food-ordering-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/home/m/Home/Work/Personal-Projects/food-ordering-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useReducer}from'react';import CartContext from'./cart-context';import{jsx as _jsx}from\"react/jsx-runtime\";var defaultCartState={items:[],totalAmount:0};var cartReducer=function cartReducer(state,action){if(action.type===\"ADD\"){var updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;var updatedItems;var existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.item.id;});var existingCartItem=state.items[existingCartItemIndex];if(existingCartItem){var updatedItem=_objectSpread(_objectSpread({},existingCartItem),{},{amount:existingCartItem.amount+action.item.amount});updatedItems=_toConsumableArray(state.items);updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems=state.items.concat(action.item);}return{items:updatedItems,totalAmount:updatedTotalAmount};}if(action.type==='REMOVE'){var _updatedItems;var _existingCartItemIndex=state.items.findIndex(function(item){return item.id===action.id;});var _existingCartItem=state.items[_existingCartItemIndex];var _updatedTotalAmount=state.totalAmount-_existingCartItem.price;if(_existingCartItem.amount===1){_updatedItems=state.items.filter(function(item){return item.id!==action.id;});}else{var _updatedItem=_objectSpread(_objectSpread({},_existingCartItem),{},{amount:_existingCartItem.amount-1});_updatedItems=_toConsumableArray(state.items);_updatedItems[_existingCartItemIndex]=_updatedItem;}return{items:_updatedItems,totalAmount:_updatedTotalAmount};}return defaultCartState;};var CartProvider=function CartProvider(props){var _useReducer=useReducer(cartReducer,defaultCartState),_useReducer2=_slicedToArray(_useReducer,2),cartState=_useReducer2[0],dispatchCartAction=_useReducer2[1];var addItemToCartHandler=function addItemToCartHandler(item){dispatchCartAction({type:'ADD',item:item});};var RemoveItemFromCartHandler=function RemoveItemFromCartHandler(id){dispatchCartAction({type:'REMOVE',id:id});};var cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:RemoveItemFromCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"sources":["/home/m/Home/Work/Personal-Projects/food-ordering-app/src/store/CartProvider.js"],"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","updatedItems","existingCartItemIndex","findIndex","id","existingCartItem","updatedItem","concat","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","RemoveItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":"waAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,C,2CAGA,GAAMC,CAAAA,gBAAgB,CAAG,CACvBC,KAAK,CAAG,EADe,CAEvBC,WAAW,CAAG,CAFS,CAAzB,CAKA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACrC,GAAIA,MAAM,CAACC,IAAP,GAAgB,KAApB,CAA2B,CACzB,GAAMC,CAAAA,kBAAkB,CACtBH,KAAK,CAACF,WAAN,CAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,CAAoBJ,MAAM,CAACG,IAAP,CAAYE,MADtD,CAGA,GAAIC,CAAAA,YAAJ,CAEA,GAAMC,CAAAA,qBAAqB,CAAGR,KAAK,CAACH,KAAN,CAAYY,SAAZ,CAC5B,SAACL,IAAD,QAAUA,CAAAA,IAAI,CAACM,EAAL,GAAYT,MAAM,CAACG,IAAP,CAAYM,EAAlC,EAD4B,CAA9B,CAIA,GAAMC,CAAAA,gBAAgB,CAAGX,KAAK,CAACH,KAAN,CAAYW,qBAAZ,CAAzB,CAEA,GAAIG,gBAAJ,CAAsB,CACpB,GAAMC,CAAAA,WAAW,gCACZD,gBADY,MAEfL,MAAM,CAAEK,gBAAgB,CAACL,MAAjB,CAA0BL,MAAM,CAACG,IAAP,CAAYE,MAF/B,EAAjB,CAIAC,YAAY,oBAAOP,KAAK,CAACH,KAAb,CAAZ,CACAU,YAAY,CAACC,qBAAD,CAAZ,CAAsCI,WAAtC,CACD,CAPD,IAOO,CACLL,YAAY,CAAGP,KAAK,CAACH,KAAN,CAAYgB,MAAZ,CAAmBZ,MAAM,CAACG,IAA1B,CAAf,CACD,CAED,MAAO,CACLP,KAAK,CAAEU,YADF,CAELT,WAAW,CAAEK,kBAFR,CAAP,CAKD,CAED,GAAGF,MAAM,CAACC,IAAP,GAAgB,QAAnB,CAA6B,CAE3B,GAAIK,CAAAA,aAAJ,CACA,GAAMC,CAAAA,sBAAqB,CAAGR,KAAK,CAACH,KAAN,CAAYY,SAAZ,CAC5B,SAACL,IAAD,QAAUA,CAAAA,IAAI,CAACM,EAAL,GAAYT,MAAM,CAACS,EAA7B,EAD4B,CAA9B,CAIA,GAAMC,CAAAA,iBAAgB,CAAGX,KAAK,CAACH,KAAN,CAAYW,sBAAZ,CAAzB,CACA,GAAML,CAAAA,mBAAkB,CAAIH,KAAK,CAACF,WAAN,CAAoBa,iBAAgB,CAACN,KAAjE,CAEA,GAAIM,iBAAgB,CAACL,MAAjB,GAA4B,CAAhC,CAAmC,CACjCC,aAAY,CAAGP,KAAK,CAACH,KAAN,CAAYiB,MAAZ,CAAmB,SAAAV,IAAI,QAAIA,CAAAA,IAAI,CAACM,EAAL,GAAYT,MAAM,CAACS,EAAvB,EAAvB,CAAf,CAED,CAHD,IAGO,CAEP,GAAME,CAAAA,YAAW,gCAAQD,iBAAR,MAAyBL,MAAM,CAAGK,iBAAgB,CAACL,MAAjB,CAA0B,CAA5D,EAAjB,CACAC,aAAY,oBAAQP,KAAK,CAACH,KAAd,CAAZ,CACAU,aAAY,CAACC,sBAAD,CAAZ,CAAsCI,YAAtC,CACD,CACD,MAAO,CACLf,KAAK,CAAGU,aADH,CAELT,WAAW,CAAGK,mBAFT,CAAP,CAID,CAEA,MAAOP,CAAAA,gBAAP,CACA,CAzDD,CA2DA,GAAMmB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAEhC,gBAAwCtB,UAAU,CAACK,WAAD,CAAcH,gBAAd,CAAlD,4CAAOqB,SAAP,iBAAkBC,kBAAlB,iBAGE,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACf,IAAD,CAAU,CACrCc,kBAAkB,CAAC,CAAChB,IAAI,CAAG,KAAR,CAAeE,IAAI,CAAGA,IAAtB,CAAD,CAAlB,CACD,CAFD,CAIA,GAAMgB,CAAAA,yBAAyB,CAAG,QAA5BA,CAAAA,yBAA4B,CAACV,EAAD,CAAQ,CACxCQ,kBAAkB,CAAC,CAAChB,IAAI,CAAG,QAAR,CAAkBQ,EAAE,CAAGA,EAAvB,CAAD,CAAlB,CACD,CAFD,CAIA,GAAMW,CAAAA,WAAW,CAAG,CAClBxB,KAAK,CAAEoB,SAAS,CAACpB,KADC,CAElBC,WAAW,CAAEmB,SAAS,CAACnB,WAFL,CAGlBwB,OAAO,CAAEH,oBAHS,CAIlBI,UAAU,CAAEH,yBAJM,CAApB,CAOA,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAKC,WAAhC,UACGL,KAAK,CAACQ,QADT,EADF,CAKD,CAzBD,CA2BA,cAAeT,CAAAA,YAAf","sourcesContent":["import React, {useReducer} from 'react'\nimport CartContext from './cart-context'\n\n\nconst defaultCartState = {\n  items : [],\n  totalAmount : 0\n}\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n\n    let updatedItems;\n\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const existingCartItem = state.items[existingCartItemIndex];\n\n    if (existingCartItem) {\n      const updatedItem = {\n        ...existingCartItem,\n        amount: existingCartItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n    \n  }\n\n  if(action.type === 'REMOVE') {\n\n    let updatedItems;\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount =  state.totalAmount - existingCartItem.price;\n\n    if (existingCartItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id)\n\n    } else {\n\n    const updatedItem = { ...existingCartItem,amount : existingCartItem.amount - 1}\n    updatedItems  = [...state.items];\n    updatedItems[existingCartItemIndex] = updatedItem;\n  }\n  return {\n    items : updatedItems,\n    totalAmount : updatedTotalAmount\n  }\n}\n\n return defaultCartState;\n}\n\nconst CartProvider = (props) => {\n\nconst [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({type : 'ADD', item : item});\n  }\n\n  const RemoveItemFromCartHandler = (id) => {\n    dispatchCartAction({type : 'REMOVE', id : id})\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: RemoveItemFromCartHandler\n  }\n\n  return (\n    <CartContext.Provider value  = {cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartProvider\n"]},"metadata":{},"sourceType":"module"}