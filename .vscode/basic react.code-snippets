{
	// Place your food-ordering-app workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	 "import classes": {
		"prefix": ["ic"],
		"body": "import classes from './${CLIPBOARD}.module.css' ",
		"description": "import css"
	},
  "use css class": {
		"prefix": ["cn"],
		"body": "className = {classes.$0} ",
		"description": "inbuilt css class use"
	},

	"useState": {
		"prefix": ["us"],
		"body": "const [${CLIPBOARD},set$1${CLIPBOARD}] = useState($0)",
		"description": "useState hook"
	},

	"arrow function": {
		"prefix": ["af"],
		"body": ["const ${CLIPBOARD} = () => { ", " return ( ","\t<div>", "\t\t$0", "\t</div>",")}"],
		"description": "arrow function"
	},

	"arrow function  handler": {
		"prefix": ["haf"],
		"body":  ["const ${CLIPBOARD} = () => {","\t\t$0", "}"],
		"description": "arrow function"
	},
	
	
		"For Loop": {
			"prefix": ["for", "for-const"],
			"body": ["for (const ${2:element} of ${1:array}) {", "\t$0", "}"],
			"description": "A for loop."
		}
	
	// {
	// 	"import classes": {
	// 		"prefix": ["ic"],
	// 		"body": ["import ${2:element} from "],
	// 		"description": "import css"
	// 	}
	// }
}

//object snippet 